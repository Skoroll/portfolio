[
  {
    "id": 1,
    "page":"Greek Taverna",
    "short": "Création d'un template de restaurant",
    "name": "", 
    "tools": "React, TypeScript, SASS", 
    "need": "Template à proposer à des clients", 
    "solution": "Site simple permettant aux clients de consulter la carte et de faire une réservation via un formulaire dédié.",
    "cover": "https://i.ibb.co/4Zg6BpC/2025-01-03-23-18-34.gif",
    "images": ["https://i.ibb.co/4Zg6BpC/2025-01-03-23-18-34.gif", "https://i.ibb.co/4ZyRY5D/2025-01-03-23-18-43.gif", "", "", ""],
    "why": "Simplifier la création de site web de restaurateur.",
    "link": null
  },
  {
    "id": 1,
    "page":"GameMasterSoundBoard",
    "short": "[WIP] Appli de soundboard pour jeu de rôle",
    "name": "GameMaster SoundBoard", 
    "tools": "React, SASS", 
    "need": "Outil simple et rapide d'utilisation pour animer des sesssions de jeu de rôle, futur appli mobile. ", 
    "solution": "Appli sans login, avec des sons prédéterminé, possibilité d'en faire une appli avec un back pour que les utilisateurs puissent uploader leurs sons.",
    "cover": "https://i.ibb.co/GVW60Cm/ezgif-5-a77219475d.gif",
    "images": ["https://i.ibb.co/GVW60Cm/ezgif-5-a77219475d.gif", "", "", ""],
    "why": "J'ai besoin d'un outil rapide pour jouer des sons dans mes sessions de jeu de rôle.",
    "link": null
  },
  {
    "id": 2,
    "page":"ChoreHelper",
    "short": "[WIP] Appli web permettant d'organiser ses tâches par pièces, avec un ajout de tâches custom",
    "name": "ChoreHelper", 
    "tools": "React, Node.js", 
    "need": "Un projet qui me tient à coeur, une appli web permettant d'organiser son ménage. L'utilisateur doit être capable de créer son compte et renseigner les pièces de sa maison. Une fois fait, l'appli lui attribue une liste de tâche générique correspondante à ses pièces. Il peut ensuite en ajouter/modifier/retirer. ", 
    "solution": "Projet full-stack mené seul, principalement pour m'entrainer avec React, approfondir au mieux ce que j'ai mis en place lors de ma formation.",
    "cover": "https://i.ibb.co/TbFdJsw/Capture-d-cran-2024-12-05-171349.png",
    "images": ["https://i.ibb.co/Mpjgy9w/r.png", "https://i.ibb.co/DVcZVWy/z.png", "https://i.ibb.co/QN8rZLX/g.png", "https://i.ibb.co/F0Lypmc/e.png"],
    "why": "Avoir un outil aidant à organiser son ménage",
    "link": "https://skoroll.github.io/Clean/"
  },
  {
    "id": 3,
    "page":"Kasa",
    "short": "Création d'un site avec React, comportant diverses routes et un système d'affichage des informations d'appartements",
    "name": "Kasa",
    "tools": "React",
    "need": "Créer un site complet de location d'appartements. Le concept est de mettre en relation propriétaires et futurs locataires. L'affichage des cartes et des données des appartements devait être dynamique, c'est-à-dire nécessiter le moins d'intervention possible pour afficher les données. Le site devait être totalement fonctionnel à la fin du projet, et je devais être capable de justifier tous les choix techniques.",
    "solution": "Le site a été créé avec React, en se basant sur la maquette fournie. Le site a nécessité plusieurs composants réutilisables, et j'ai également dû mettre en place les différentes routes, ainsi qu'une route de récupération (404) en cas de problème d'URL. J'ai aussi appris à créer des composants utilisant différents hooks afin de gérer les états.",
    "cover": "https://i.ibb.co/nCJ1Sg6/Kasa1.png",
    "images": ["https://i.ibb.co/nCJ1Sg6/Kasa1.png", "https://i.ibb.co/kMzpPx4/Kasa2.png", "https://i.ibb.co/mvQN68S/Kasa3.png", "https://i.ibb.co/6syvMW9/Kasa4.png"],
    "why": "MEttre à jour le front d'un site de location",
    "link": null
  },
  {
    "id": 4,
    "page":"Nina",
    "short": "Débuggage, SEO et optimisation, création d'un rapport d'intervention détaillé",
    "name": "Nina Carducci",
    "tools": "Optimisation, Débogage, SEO",
    "need": "Le site d'une photographe présentait deux bugs, de mauvaises performances techniques et des problèmes de SEO (Search Engine Optimization = optimisation pour les moteurs de recherche). Le but était ici d'améliorer le tout, tant au niveau technique qu'au niveau du référencement. Pour ce faire, j'ai utilisé Lighthouse, le plug-in Wave, Twitter Card, Open Graph et les Rich Snippets.",
    "solution": "J'ai établi un rapport d'intervention détaillant les modifications apportées. Pour la partie technique, j'ai changé le format des photos (de JPG à WEBP) pour qu'elles soient plus légères sans perte de qualité et s'affichent plus rapidement. La taille des images a aussi été réduite, également pour accélérer le temps d'affichage. La minification des fichiers CSS et JS a amélioré la vitesse d'affichage du site. L'ajout d'un <i>defer</i> sur les pages JS a permis de lancer les scripts après le chargement du HTML. Mes différentes modifications ont permis d'améliorer la note Lighthouse, passant de <b>88, 68, 100, 70</b> à <b>95, 100, 100, 100</b>.",
    "cover": "https://i.ibb.co/rfch0Tp/codeSEO1.png",
    "images": ["https://i.ibb.co/rfch0Tp/codeSEO1.png", "https://i.ibb.co/8YxY4dv/codeSEO2.png", "https://i.ibb.co/fd5j8jQ/Nina-Score.png"],
    "why": "Le site d'une photographe est lent et mal référencé",
    "link": null
  },
  {
    "id": 5,
    "page":"Grimoire",
    "short": "Serveur Express.js à créer, avec login/logout et formulaire d'ajout d'entrée sur la DB",
    "name": "Mon Vieux Grimoire",
    "tools": "Node.js, Express, MongoDB",
    "need": "Créer le back-end d'un site de notation de livre, la partie front existait déjà. Il fallait créer une API Rest, la faire communiquer avec une base de donnés et mettre un système de login en place.<br/>Une fois fait, les livres devaient pouvoir être noté par les utilisateurs, les cartes des livres devaient renvoyer vers les détails de l'oeuvre et montrer les livres les mieux notés du site.",
    "solution": "J'ai crée un serveur en utilisant Node.js et Express.<br/>L'API devait permettre de créer un compte et s'identifier, créer, modifier, supprimer un livre et noter des oeuvres. Elle devait aussi, bien sûr, permettre de récupérer les livres stocké sur la base de donnés.<br/>Côté base de donné, c'est MongoDB qui a été utilisé.<br/>En terme de sécurité j'ai ajouté bcrypt, helmet, express rate limit.",
    "cover": "https://i.ibb.co/T1shcFz/grimoire1.png",
    "images": ["https://i.ibb.co/T1shcFz/grimoire1.png","https://i.ibb.co/dKsmds3/grimoire2.png", "https://i.ibb.co/Qfny7qq/grimoire3.png", "https://i.ibb.co/yPCTq2Y/grimoire4.png"],
    "why": "Un site de notation de livre n'a aucun back-end",
    "link": null
  }
]
